{"version":3,"sources":["navigation/CONSTANTS.js","firebase.js","context/AuthContext.js","pages/SignUp/SignUp.js","pages/SignUp/index.js","pages/Login/Login.js","pages/Login/index.js","navigation/NotFound.js","pages/Dashboard/Dashboard.js","pages/Dashboard/index.js","pages/ForgotPassword/ForgotPassword.js","pages/ForgotPassword/index.js","pages/UpdateProfile/UpdateProfile.js","pages/UpdateProfile/index.js","pages/index.js","parts/header/index.js","navigation/RouterConfig.js","App.js","index.js"],"names":["SIGNUP","LOGIN","DASHBOARD","FORGOTPASSWORD","UPDATEPROFILE","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","isAuth","setIsAuth","isAuthFinished","setIsAuthFinished","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","CircularProgress","SignUp","navigate","useNavigate","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","loading","setLoading","success","setSuccess","handleSubmit","e","a","preventDefault","console","log","current","className","onSubmit","method","Alert","severity","TextField","required","inputRef","id","variant","type","fullWidth","Button","disabled","style","backgroundColor","color","onClick","exportedObject","name","path","element","to","Login","NotFound","Dashboard","ForgotPassword","UpdateProfile","promises","push","Promise","all","then","catch","finally","defaultValue","placeholder","pages","Header","RouterConfig","App","routing","useRoutes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cd9c9d3.chunk.js","sourcesContent":["export const SIGNUP = '/signup'\nexport const LOGIN = '/login'\nexport const DASHBOARD = '/'\nexport const FORGOTPASSWORD = '/forgot-password'\nexport const UPDATEPROFILE = '/update-profile'","import firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\nexport const auth = app.auth()\nexport default app","import { CircularProgress } from '@material-ui/core';\nimport React, { useContext, useState, useEffect } from 'react'\nimport { auth } from '../firebase'\n\nconst AuthContext = React.createContext();\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\n\nconst AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState()\n    const [isAuth, setIsAuth] = useState(false)\n    const [isAuthFinished, setIsAuthFinished] = useState(false)\n\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email)\n    }\n    function logout() {\n        return auth.signOut()\n    }\n    function updateEmail(email) {\n        return currentUser.updateEmail(email)\n    }\n    function updatePassword(password) {\n        return currentUser.updatePassword(password)\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            if (user != null) {\n                setIsAuth(true)\n                setIsAuthFinished(true)\n            }\n            else {\n                setIsAuth(false)\n                setIsAuthFinished(true)\n\n            }\n        })\n        return unsubscribe\n\n    }, [])\n\n\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword,\n        isAuth,\n        isAuthFinished\n    }\n\n\n    return (\n        <AuthContext.Provider value={value}>\n            {\n                isAuthFinished ? children : <CircularProgress />}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider\n","import React, { useRef, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { DASHBOARD, LOGIN } from \"../../navigation/CONSTANTS\";\nimport { useNavigate } from \"react-router\";\nconst SignUp = () => {\n  let navigate = useNavigate();\n\n  const goLoginPage = () => {\n    navigate(LOGIN);\n\n  };\n\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { signup, currentUser } = useAuth();\n  const [success, setSuccess] = useState(false);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(emailRef.current.value);\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      await signup(emailRef.current.value, passwordRef.current.value);\n      setLoading(true);\n      setSuccess(true);\n      navigate(DASHBOARD)\n    } catch (error) {\n      setError(\"Failed to create an account \");\n      console.log(error);\n      setSuccess(false);\n    }\n    setLoading(false);\n  };\n  return (\n    <div className=\" md:w-1/3 sm:2/3 m-auto\" onSubmit={handleSubmit}>\n      <p className=\"text-4xl text-center\"> Sign Up</p>\n      <form className=\"m-10\" method=\"post\">\n        {error && (\n          <Alert severity=\"error\" className=\"text-center\">\n            {error}\n          </Alert>\n        )}\n        {success && (\n          <Alert className=\"text-center\">\n            Login success User = {currentUser.email}\n          </Alert>\n        )}\n\n        <div key=\"mail\">\n          <p className=\"text-xl my-3\"> E-Mail</p>\n          <TextField\n            required\n            inputRef={emailRef}\n            id=\"email\"\n            variant=\"outlined\"\n            type=\"email\"\n            fullWidth\n          />\n        </div>\n        <div key=\"password\">\n          <p className=\"text-xl my-3\">Password</p>\n          <TextField\n            required\n            id=\"password\"\n            inputRef={passwordRef}\n            type=\"password\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </div>\n        <div key=\"password-confirm\">\n          <p className=\"text-xl my-3\"> Confirm Password</p>\n          <TextField\n            required\n            inputRef={passwordConfirmRef}\n            type=\"password\"\n            id=\"password-confirm\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </div>\n        <div key=\"button\" className=\"text-center my-5\">\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={loading}\n            style={{ backgroundColor: \"#04151f\", color: \"white\" }}\n          >\n            <p className=\"text-xl m-2\"> Sign Up</p>\n          </Button>\n        </div>\n      </form>\n      <p className=\"text-center text-xl\">\n        Need an account ?{\" \"}\n        {\n          <Button onClick={goLoginPage}>\n            {\" \"}\n            Log In{\" \"}\n          </Button>\n        }\n      </p>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { Navigate, Outlet } from 'react-router'\nimport { SIGNUP, DASHBOARD } from '../../navigation/CONSTANTS'\nimport SignUp from './SignUp'\n\nconst exportedObject = (isAuth) => {\n    return {\n        name: \"Sign Up\",\n        path: SIGNUP,\n        element: <Outlet />,\n        children: [\n            {\n                path: '/',\n                element: isAuth ? <Navigate to={DASHBOARD} /> : <SignUp />\n            }\n        ]\n    }\n}\n\nexport default exportedObject\n","import React, { useRef, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { useNavigate } from \"react-router\";\nimport { DASHBOARD, FORGOTPASSWORD, SIGNUP } from \"../../navigation/CONSTANTS\";\n\nconst Login = () => {\n  let navigate = useNavigate();\n\n  const goSignUpPage = () => {\n    navigate(SIGNUP);\n  };\n  const goDashboard = () => {\n    navigate(DASHBOARD);\n  };\n  const goForgotPassword = () => {\n    navigate(FORGOTPASSWORD);\n  };\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { login } = useAuth();\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      await login(emailRef.current.value, passwordRef.current.value);\n      setLoading(true);\n      setSuccess(true);\n      goDashboard();\n    } catch (error) {\n      setError(\"Failed to login< \");\n      console.log(error);\n      setSuccess(false);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\" md:w-1/3 sm:2/3 m-auto\" onSubmit={handleSubmit}>\n      <p className=\"text-4xl text-center mt-10\"> Log In</p>\n      <form className=\"m-10\" method=\"post\">\n        {error && (\n          <Alert severity=\"error\" className=\"text-center\">\n            {error}\n          </Alert>\n        )}\n        {success && <Alert className=\"text-center\">Login success</Alert>}\n\n        <div key=\"mail\">\n          <p className=\"text-xl my-3\"> E-Mail</p>\n          <TextField\n            required\n            inputRef={emailRef}\n            id=\"email\"\n            variant=\"outlined\"\n            type=\"email\"\n            fullWidth\n          />\n        </div>\n        <div key=\"password\">\n          <p className=\"text-xl my-3\">Password</p>\n          <TextField\n            required\n            id=\"password\"\n            inputRef={passwordRef}\n            type=\"password\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </div>\n\n        <div key=\"button\" className=\"text-center my-5\">\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={loading}\n            style={{ backgroundColor: \"#04151f\", color: \"white\" }}\n          >\n            <p className=\"text-xl m-2\"> Log In</p>\n          </Button>\n        </div>\n      </form>\n      <div className=\"text-center\">\n        <Button type=\"outlined\" onClick={goForgotPassword}>\n          Forgot password ?\n        </Button>\n      </div>\n      <p className=\"text-center text-xl\">\n        Need an account ?\n        {\n          <Button type=\"outlined\" onClick={goSignUpPage}>\n            Sign Up\n          </Button>\n        }\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n","import { Navigate, Outlet } from \"react-router\";\nimport { DASHBOARD, LOGIN } from \"../../navigation/CONSTANTS\";\nimport Login from './Login'\nconst exportedObject = (isAuth) => {\n\n    return {\n        name: 'Login',\n        path: LOGIN,\n        element: <Outlet />,\n        children: [\n            { path: '/', element: isAuth ? <Navigate to={DASHBOARD} /> : <Login /> }\n        ]\n    }\n}\nexport default exportedObject","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            <p className=\"text-2xl text-center\">Not Found </p>\n        </div>\n    )\n}\n\nexport default NotFound","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { useNavigate } from \"react-router\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { LOGIN, UPDATEPROFILE } from \"../../navigation/CONSTANTS\";\nconst Dashboard = () => {\n  const { currentUser, logout } = useAuth();\n  const [error, setError] = useState(\"\");\n  let navigate = useNavigate();\n\n  async function handleUpdateProfile() {\n    navigate(UPDATEPROFILE);\n  }\n  async function handleLogout() {\n    setError(\"\");\n    try {\n      await logout();\n      navigate(LOGIN);\n    } catch (e) {\n      console.log(e);\n      setError(\"Failed to log out\");\n    }\n  }\n  return (\n    <div className=\"justify-center text-center  \">\n      {error && (\n        <Alert severity=\"error\" className=\"text-center\">\n          {error}\n        </Alert>\n      )}\n      <div className=\"flex flex-row justify-center p-10 space-x-4\">\n        <strong>Email: </strong>\n        {currentUser && <p>{currentUser.email}</p>}\n      </div>\n      <div className=\"space-x-5\">\n        <Button\n          style={{ backgroundColor: \"#e63946\", color: \"\" }}\n          variant=\"contained\"\n          onClick={handleUpdateProfile}\n        >\n          Update Profile\n        </Button>\n        <Button\n          style={{ backgroundColor: \"#04151f\", color: \"white\" }}\n          variant=\"contained\"\n          onClick={handleLogout}\n        >\n          Log Out\n        </Button>\n      </div>{\" \"}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { Navigate, Outlet } from \"react-router\";\nimport { DASHBOARD, LOGIN } from \"../../navigation/CONSTANTS\";\nimport Dashboard from './Dashboard'\nconst exportedObject = (isAuth) => {\n    return {\n        name: 'Dashboard',\n        path: DASHBOARD,\n        element: <Outlet />,\n        children: [\n            { path: '/', element: isAuth ? <Dashboard /> : <Navigate to={LOGIN} /> }\n\n        ]\n    }\n}\nexport default exportedObject","import React, { useRef, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { useNavigate } from \"react-router\";\nimport { LOGIN, SIGNUP } from \"../../navigation/CONSTANTS\";\n\n\n\nconst ForgotPassword = () => {\n    let navigate = useNavigate();\n\n    const goLogin = () => {\n        navigate(LOGIN);\n    };\n    const goSignUpPage = () => {\n        navigate(SIGNUP);\n    };\n    const emailRef = useRef();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const { resetPassword } = useAuth();\n    const [success, setSuccess] = useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            setError(\"\");\n            await resetPassword(emailRef.current.value);\n            setLoading(true);\n            setSuccess(true);\n        } catch (error) {\n            setError(\"Failed to reset \");\n            console.log(error);\n            setSuccess(false);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <div className=\" md:w-1/3 sm:2/3 m-auto\" onSubmit={handleSubmit}>\n            <p className=\"text-4xl text-center mt-10\"> Password Reset</p>\n            <form className=\"m-10\" method=\"post\">\n                {error && (\n                    <Alert severity=\"error\" className=\"text-center\">\n                        {error}\n                    </Alert>\n                )}\n                {success && <Alert className=\"text-center\">Password reset success. Please check your email for further instructions.</Alert>}\n\n                <div key=\"mail\">\n                    <p className=\"text-xl my-3\"> E-Mail</p>\n                    <TextField\n                        required\n                        inputRef={emailRef}\n                        id=\"email\"\n                        variant=\"outlined\"\n                        type=\"email\"\n                        fullWidth\n                    />\n                </div>\n\n\n                <div key=\"button\" className=\"text-center my-5\">\n                    <Button\n                        variant=\"contained\"\n                        type=\"submit\"\n                        disabled={loading}\n                        style={{ backgroundColor: \"#04151f\", color: \"white\" }}\n                    >\n                        <p className=\"text-l m-2\"> Reset Password</p>\n                    </Button>\n                </div>\n            </form>\n            <div className=\"text-center\">\n                <Button type=\"outlined\" onClick={goLogin}>\n                    Login\n                </Button>\n            </div>\n            <p className=\"text-center text-xl\">\n                Need an account ?\n                {\n                    <Button type=\"outlined\" onClick={goSignUpPage}>\n                        Sign Up\n                    </Button>\n                }\n            </p>\n        </div>\n    );\n};\n\nexport default ForgotPassword\n","import { Navigate, Outlet } from 'react-router'\nimport { DASHBOARD, FORGOTPASSWORD } from '../../navigation/CONSTANTS'\nimport ForgotPasword from './ForgotPassword'\n\nconst exportedObject = (isAuth) => {\n    return {\n        name: \"Forgot Password\",\n        path: FORGOTPASSWORD,\n        element: <Outlet />,\n        children: [\n            {\n                path: '/',\n                element: isAuth ? <Navigate to={DASHBOARD} /> : <ForgotPasword />\n            }\n        ]\n    }\n}\n\nexport default exportedObject\n","import React, { useRef, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { DASHBOARD } from \"../../navigation/CONSTANTS\";\nimport { useNavigate } from \"react-router\";\nconst UpdateProfile = () => {\n    let navigate = useNavigate();\n\n    const goDashboard = () => {\n        navigate(DASHBOARD);\n    };\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const { currentUser, updateEmail, updatePassword } = useAuth();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(emailRef.current.value);\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError(\"Passwords do not match\");\n        }\n\n        const promises = []\n        setLoading(true)\n        setError('')\n        if (emailRef.current.value !== currentUser.email) {\n            promises.push(updateEmail(emailRef.current.value))\n        }\n\n        if (passwordRef.current.value) {\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        Promise.all(promises).then(() => {\n            navigate(DASHBOARD)\n        }).catch(() => {\n            setError('Failed to update account')\n        }).finally(() => { setLoading(false) })\n    };\n    return (\n        <div className=\" md:w-1/3 sm:2/3 m-auto\" onSubmit={handleSubmit}>\n            <p className=\"text-4xl text-center\">Update Profile</p>\n            <form className=\"m-10\" method=\"post\">\n                {error && (\n                    <Alert severity=\"error\" className=\"text-center\">\n                        {error}\n                    </Alert>\n                )}\n\n\n                <div key=\"mail\">\n                    <p className=\"text-xl my-3\"> E-Mail</p>\n                    <TextField\n                        required\n                        defaultValue={currentUser.email}\n                        inputRef={emailRef}\n                        id=\"email\"\n                        variant=\"outlined\"\n                        type=\"email\"\n                        fullWidth\n                    />\n                </div>\n                <div key=\"password\">\n                    <p className=\"text-xl my-3\">Password</p>\n                    <TextField\n                        placeholder=\"Leave blank to keep the same\"\n                        id=\"password\"\n                        inputRef={passwordRef}\n                        type=\"password\"\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </div>\n                <div key=\"password-confirm\">\n                    <p className=\"text-xl my-3\"> Confirm Password</p>\n                    <TextField\n                        placeholder=\"Leave blank to keep the same\"\n                        inputRef={passwordConfirmRef}\n                        type=\"password\"\n                        id=\"password-confirm\"\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </div>\n                <div key=\"button\" className=\"text-center my-5\">\n                    <Button\n                        variant=\"contained\"\n                        type=\"submit\"\n                        disabled={loading}\n                        style={{ backgroundColor: \"#04151f\", color: \"white\" }}\n                    >\n                        <p className=\"text-xl m-2\"> Update</p>\n                    </Button>\n                </div>\n            </form>\n            <p className=\"text-center text-xl\">\n                {\n                    <Button onClick={goDashboard}>\n                        Cancel\n                    </Button>\n                }\n            </p>\n        </div>\n    );\n};\n\nexport default UpdateProfile;\n","import { Navigate, Outlet } from 'react-router'\nimport { LOGIN, UPDATEPROFILE } from '../../navigation/CONSTANTS'\nimport UpdateProfile from './UpdateProfile'\n\nconst exportedObject = (isAuth) => {\n    return {\n        name: \"Update Profile\",\n        path: UPDATEPROFILE,\n        element: <Outlet />,\n        children: [\n            {\n                path: '/',\n                element: isAuth ? <UpdateProfile /> : <Navigate to={LOGIN} />\n            }\n        ]\n    }\n}\nexport default exportedObject\n","import SignUp from './SignUp'\nimport Login from './Login'\nimport NotFound from '../navigation/NotFound'\nimport Dashboard from './Dashboard/'\nimport ForgotPassword from './ForgotPassword'\nimport UpdateProfile from './UpdateProfile'\nfunction pages(isAuth) {\n    return ([\n        SignUp(isAuth),\n        Login(isAuth),\n        Dashboard(isAuth),\n        ForgotPassword(isAuth),\n        UpdateProfile(isAuth),\n        { path: '*', element: <NotFound /> }\n    ])\n}\n\nexport default pages","import React from 'react'\nimport { Outlet } from 'react-router'\nconst Header = () => {\n    return (\n        <div>\n            <div className=\"h-10 py-10 bg-green-700 text-center text-2xl\">Firebase Auth </div>\n            <Outlet></Outlet>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport pages from '../pages/index'\nimport Header from '../parts/header/'\nfunction RouterConfig(isAuth) {\n    return [\n        {\n            path: '/', element: <Header />, children: pages(isAuth)\n        }\n    ]\n\n\n}\n\nexport default RouterConfig\n","import RouterConfig from \"./navigation/RouterConfig\";\nimport { useRoutes } from \"react-router-dom\";\nimport { useAuth } from \"./context/AuthContext\";\nfunction App() {\n  const { isAuth } = useAuth();\n  const routing = useRoutes(RouterConfig(isAuth));\n\n  return <>{routing}</>;\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport AuthProvider from \"./context/AuthContext\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}